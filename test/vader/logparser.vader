Execute (Setup):
  setfiletype tex
  cfile ../examples/quickfix/main.log
  let counter = 0

Execute (Verify captured LaTeX logfile warnings: total number):
  Log len(getqflist())
  AssertEqual 4, len(getqflist())

After:
  let counter += 1

# NOTE: Order always tests according to the order of messages
#       in '../examples/quickfix/main.log'

Execute (Verify captured LaTeX logfile warnings: Package natbib):
  AssertEqual 'Package natbib Warning: Citation `Einstein:1905'' on page 1 undefined on input line 99.', getqflist()[counter]['text']
  AssertEqual 99, getqflist()[counter]['lnum']
  AssertEqual 'W', getqflist()[counter]['type']

Execute (Verify captured LaTeX logfile warnings: Package refcheck (general pattern)):
  AssertEqual 'Package refcheck Warning: Unused label `eq:my_equation_label'' on input line 12.', getqflist()[counter]['text']
  AssertEqual 12, getqflist()[counter]['lnum']
  AssertEqual 'W', getqflist()[counter]['type']

Execute (Verify captured LaTeX logfile warnings: Package hyperref (two lines)):
  AssertEqual "Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):\n                removing `\\gamma'", getqflist()[counter]['text']
  AssertEqual 9, getqflist()[counter]['lnum']
  AssertEqual 'W', getqflist()[counter]['type']

Execute (Verify captured LaTeX logfile warnings: Package hyperref (three lines)):
  AssertEqual "Package hyperref Warning: Composite letter `\\textdotbelow+u'\n                not defined in PD1 encoding,\n                removing `\\textdotbelow'", getqflist()[counter]['text']
  AssertEqual 5, getqflist()[counter]['lnum']
  AssertEqual 'W', getqflist()[counter]['type']
